{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sran\\\\Desktop\\\\projects\\\\prafct\\\\react\\\\react-app\\\\rect-app\\\\react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"Sukh\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(TextForm, {\n        showAlert: showAlert,\n        heading: \"Try TextUtils - word counter, character counter, remove extra spaces\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(About, {\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n_c = App;\nexport default App;\n\n// function App() {\n//   const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\n//   const [alert, setAlert] = useState(null);\n\n//   const showAlert = (message, type)=>{\n//       setAlert({\n//         msg: message,\n//         type: type\n//       })\n//       setTimeout(() => {\n//           setAlert(null);\n//       }, 1500);\n//   }\n\n//   const toggleMode = ()=>{\n//     if(mode === 'light'){\n//       setMode('dark');\n//       document.body.style.backgroundColor = '#042743';\n//       showAlert(\"Dark mode has been enabled\", \"success\");\n//     }\n//     else{\n//       setMode('light');\n//       document.body.style.backgroundColor = 'white';\n//       showAlert(\"Light mode has been enabled\", \"success\");\n//     }\n//   }\n//   return (\n//     <>\n//     <div>\n//     <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} key={new Date()} />\n//     <Alert alert={alert}/>\n\n//             <TextForm showAlert={showAlert} heading=\"Try TextUtils - word counter, character counter, remove extra spaces\" mode={mode}/>\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["About","Navbar","Alert","TextForm","React","useState","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor"],"sources":["C:/Users/sran/Desktop/projects/prafct/react/react-app/rect-app/react-app/src/App.js"],"sourcesContent":["import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\n\nfunction App() {\n  const[mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type)=>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n          setAlert(null);\n      }, 2000);\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n        setMode('dark');\n        document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n\n    }\n    else {\n        setMode('light');\n        document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n\n\n    }\n};\n  return(\n    <>\n    {/* <div className=\"container\"> */}\n    <Navbar title=\"Sukh\" mode={mode} toggleMode={toggleMode} />\n    <Alert alert={alert}/>\n    <div className=\"container\">\n    <TextForm showAlert={showAlert} heading=\"Try TextUtils - word counter, character counter, remove extra spaces\" mode={mode}/>\n    <About mode={mode}></About>\n        {/* </div> */}\n  </div>\n  </>\n  );\n}\n\nexport default App;\n\n// function App() {\n//   const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\n//   const [alert, setAlert] = useState(null);\n\n//   const showAlert = (message, type)=>{\n//       setAlert({\n//         msg: message,\n//         type: type\n//       })\n//       setTimeout(() => {\n//           setAlert(null);\n//       }, 1500);\n//   }\n\n//   const toggleMode = ()=>{\n//     if(mode === 'light'){\n//       setMode('dark');\n//       document.body.style.backgroundColor = '#042743';\n//       showAlert(\"Dark mode has been enabled\", \"success\");\n//     }\n//     else{\n//       setMode('light');\n//       document.body.style.backgroundColor = 'white';\n//       showAlert(\"Light mode has been enabled\", \"success\");\n//     }\n//   }\n//   return (\n//     <>\n//     <div>\n//     <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} key={new Date()} />\n//     <Alert alert={alert}/>\n       \n//             <TextForm showAlert={showAlert} heading=\"Try TextUtils - word counter, character counter, remove extra spaces\" mode={mode}/>\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAExC,SAASC,GAAG,GAAG;EAAA;EACb,MAAK,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,QAAQ,CAAC,OAAO,CAAC;EACxC,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMM,SAAS,GAAG,CAACC,OAAO,EAAEC,IAAI,KAAG;IAC/BH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OAAO;MACZC,IAAI,EAAEA;IACR,CAAC,CAAC;IACFE,UAAU,CAAC,MAAM;MACbL,QAAQ,CAAC,IAAI,CAAC;IAClB,CAAC,EAAE,IAAI,CAAC;EACZ,CAAC;EACD,MAAMM,UAAU,GAAG,MAAM;IACvB,IAAIT,IAAI,KAAK,OAAO,EAAE;MAClBC,OAAO,CAAC,MAAM,CAAC;MACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,MAAM;MAC9CT,SAAS,CAAC,4BAA4B,EAAE,SAAS,CAAC;IAEpD,CAAC,MACI;MACDH,OAAO,CAAC,OAAO,CAAC;MAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC/CT,SAAS,CAAC,6BAA6B,EAAE,SAAS,CAAC;IAGrD;EACJ,CAAC;EACC,oBACE;IAAA,wBAEA,QAAC,MAAM;MAAC,KAAK,EAAC,MAAM;MAAC,IAAI,EAAEJ,IAAK;MAAC,UAAU,EAAES;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eAC3D,QAAC,KAAK;MAAC,KAAK,EAAEP;IAAM;MAAA;MAAA;MAAA;IAAA,QAAE,eACtB;MAAK,SAAS,EAAC,WAAW;MAAA,wBAC1B,QAAC,QAAQ;QAAC,SAAS,EAAEE,SAAU;QAAC,OAAO,EAAC,sEAAsE;QAAC,IAAI,EAAEJ;MAAK;QAAA;QAAA;QAAA;MAAA,QAAE,eAC5H,QAAC,KAAK;QAAC,IAAI,EAAEA;MAAK;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAEvB;EAAA,gBACH;AAEL;AAAC,GAvCQD,GAAG;AAAA,KAAHA,GAAG;AAyCZ,eAAeA,GAAG;;AAElB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}