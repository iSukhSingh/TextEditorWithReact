{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sran\\\\Desktop\\\\projects\\\\prafct\\\\react\\\\react-app\\\\rect-app\\\\react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\n\n// function App() {\n//   const[mode, setMode] = useState('light');\n//   const [alert, setAlert] = useState(null);\n\n//   const showAlert = (message, type)=>{\n//       setAlert({\n//         msg: message,\n//         type: type\n//       })\n//       setTimeout(() => {\n//           setAlert(null);\n//       }, 1500);\n//   }\n//   const toggleMode = () => {\n//     if (mode === 'light') {\n//         setMode('dark');\n//         document.body.style.backgroundColor = 'grey';\n//       showAlert(\"Dark mode has been enabled\", \"success\");\n\n//     }\n//     else {\n//         setMode('light');\n//         document.body.style.backgroundColor = 'white';\n//         setAlert(\"Light mode enable\");\n//       showAlert(\"Light mode has been enabled\", \"success\");\n\n//     }\n// };\n//   return(\n//     <>\n//     {/* <div className=\"container\"> */}\n//     <Navbar title=\"Sukh\" mode={mode} toggleMode={toggleMode} />\n//     <Alert alety={alert}/>\n//     <div className=\"container\">\n//     <TextForm showAlert={showAlert} heading=\"Enter the the text analyze\" mode={mode} />\n//     <About mode={mode}></About>\n//         {/* </div> */}\n//   </div>\n//   </>\n//   );\n// }\n\n// export default App;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, new Date(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/about\",\n          children: /*#__PURE__*/_jsxDEV(About, {\n            mode: mode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(TextForm, {\n            showAlert: showAlert,\n            heading: \"Try TextUtils - word counter, character counter, remove extra spaces\",\n            mode: mode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["About","Navbar","Alert","TextForm","React","useState","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","Date"],"sources":["C:/Users/sran/Desktop/projects/prafct/react/react-app/rect-app/react-app/src/App.js"],"sourcesContent":["import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\n\n\n// function App() {\n//   const[mode, setMode] = useState('light');\n//   const [alert, setAlert] = useState(null);\n\n//   const showAlert = (message, type)=>{\n//       setAlert({\n//         msg: message,\n//         type: type\n//       })\n//       setTimeout(() => {\n//           setAlert(null);\n//       }, 1500);\n//   }\n//   const toggleMode = () => {\n//     if (mode === 'light') {\n//         setMode('dark');\n//         document.body.style.backgroundColor = 'grey';\n//       showAlert(\"Dark mode has been enabled\", \"success\");\n\n//     }\n//     else {\n//         setMode('light');\n//         document.body.style.backgroundColor = 'white';\n//         setAlert(\"Light mode enable\");\n//       showAlert(\"Light mode has been enabled\", \"success\");\n\n\n//     }\n// };\n//   return(\n//     <>\n//     {/* <div className=\"container\"> */}\n//     <Navbar title=\"Sukh\" mode={mode} toggleMode={toggleMode} />\n//     <Alert alety={alert}/>\n//     <div className=\"container\">\n//     <TextForm showAlert={showAlert} heading=\"Enter the the text analyze\" mode={mode} />\n//     <About mode={mode}></About>\n//         {/* </div> */}\n//   </div>\n//   </>\n//   );\n// }\n\n// export default App;\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n          setAlert(null);\n      }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} key={new Date()} />\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    <Switch>\n    {/* /users --> Component 1\n        /users/home --> Component 2 */}\n          <Route exact path=\"/about\">\n            <About mode={mode} />\n          </Route>\n          <Route exact path=\"/\">\n            <TextForm showAlert={showAlert} heading=\"Try TextUtils - word counter, character counter, remove extra spaces\" mode={mode}/>\n          </Route>\n    </Switch>\n    </div>\n    {/* </Router> */}\n    </> \n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAGvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAEA,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMM,SAAS,GAAG,CAACC,OAAO,EAAEC,IAAI,KAAG;IAC/BH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OAAO;MACZC,IAAI,EAAEA;IACR,CAAC,CAAC;IACFE,UAAU,CAAC,MAAM;MACbL,QAAQ,CAAC,IAAI,CAAC;IAClB,CAAC,EAAE,IAAI,CAAC;EACZ,CAAC;EAED,MAAMM,UAAU,GAAG,MAAI;IACrB,IAAGT,IAAI,KAAK,OAAO,EAAC;MAClBC,OAAO,CAAC,MAAM,CAAC;MACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CT,SAAS,CAAC,4BAA4B,EAAE,SAAS,CAAC;IACpD,CAAC,MACG;MACFH,OAAO,CAAC,OAAO,CAAC;MAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CT,SAAS,CAAC,6BAA6B,EAAE,SAAS,CAAC;IACrD;EACF,CAAC;EACD,oBACE;IAAA,wBAEA,QAAC,MAAM;MAAC,KAAK,EAAC,WAAW;MAAC,IAAI,EAAEJ,IAAK;MAAC,UAAU,EAAES;IAAW,GAAM,IAAIK,IAAI,EAAE;MAAA;MAAA;MAAA;IAAA,QAAI,eACjF,QAAC,KAAK;MAAC,KAAK,EAAEZ;IAAM;MAAA;MAAA;MAAA;IAAA,QAAE,eACtB;MAAK,SAAS,EAAC,gBAAgB;MAAA,uBAC/B,QAAC,MAAM;QAAA,wBAGD,QAAC,KAAK;UAAC,KAAK;UAAC,IAAI,EAAC,QAAQ;UAAA,uBACxB,QAAC,KAAK;YAAC,IAAI,EAAEF;UAAK;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QACf,eACR,QAAC,KAAK;UAAC,KAAK;UAAC,IAAI,EAAC,GAAG;UAAA,uBACnB,QAAC,QAAQ;YAAC,SAAS,EAAEI,SAAU;YAAC,OAAO,EAAC,sEAAsE;YAAC,IAAI,EAAEJ;UAAK;YAAA;YAAA;YAAA;UAAA;QAAE;UAAA;UAAA;UAAA;QAAA,QACtH;MAAA;QAAA;QAAA;QAAA;MAAA;IACL;MAAA;MAAA;MAAA;IAAA,QACH;EAAA,gBAEH;AAEP;AAAC,GA9CQD,GAAG;AAAA,KAAHA,GAAG;AAgDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}